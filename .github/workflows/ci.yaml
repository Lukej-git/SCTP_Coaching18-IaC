name: CI Checks
run-name: Running Terraform Checks by ${{ github.actor }}

on:
  pull_request:
    branches:
      - main

env:
  APP_NAME: proj-aws-ecs-cicd
  ECR_REPO: proj-aws-ecs-cicd-ecr-repo

jobs:
  Initial-Checks:
    runs-on: ubuntu-latest

    steps:
      - name: Getting initiator name
        run: echo "Workflow initiated by ${{ github.actor }} from branch ${{ github.ref_name }}"

  get-tag:
    runs-on: ubuntu-latest
    outputs:
      LATEST_TAG: ${{ steps.get_latest_tag.outputs.LATEST_TAG }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Fetch All Tags
        run: git fetch --tags

      - name: Get Latest Tag
        id: get_latest_tag
        run: |
          echo "LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)" >> "$GITHUB_OUTPUT"
          echo "LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)"

      - name: Output Latest Tag
        run: echo "The latest tag is ${{ steps.get_latest_tag.outputs.LATEST_TAG }}"

  terraform-checks:
    name: Basic TF checks
    runs-on: ubuntu-latest
    needs: Initial-Checks
    outputs:
      status: ${{ job.status }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: check current directory
        run: ls

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform init
        run: terraform init

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check -diff -recursive

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - uses: terraform-linters/setup-tflint@v3
        with:
          tflint_version: latest

      - name: Show version
        run: tflint --version

      - name: Init TFLint
        run: tflint --init

      - name: Run TFLint
        run: tflint -f compact

  snyk-checks:
    name: Basic Snyk checks
    runs-on: ubuntu-latest
    needs: Initial-Checks
    outputs:
      status: ${{ job.status }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Install Snyk CLI
        run: npm install -g snyk

      - name: Run Snyk Code Scan And Check Snyk Scan Results
        continue-on-error: true
        uses: snyk/actions/iac@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: "--report --severity-threshold=high --scan=resource-changes"

      - name: Run Snyk Code Test Scan And Check Snyk Scan Results
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: snyk code test

      - name: Run Snyk to check for vulnerabilities
        continue-on-error: true
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

  #################################################
  # Finally, update summary for snyk-check        #
  # Update needs statement to include snyk-checks #
  #################################################
  summary:
    needs: [terraform-checks, snyk-checks] # add snyk-checks
    runs-on: ubuntu-latest
    steps:
      - name: Adding markdown
        run: |
          TF_STATUS=${{ needs.terraform-checks.outputs.status }}
          SNYK_STATUS=${{ needs.snyk-checks.outputs.status }}

          echo '## ðŸš€ Preparing Build Summary ðŸš€' >> $GITHUB_STEP_SUMMARY
          echo '' >> $GITHUB_STEP_SUMMARY

          echo "| Job Name        | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----------------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| tf-check       | $TF_STATUS |" >> $GITHUB_STEP_SUMMARY
          # echo " snyk-check     | $SNYK_STATUS |" >> $GITHUB_STEP_SUMMARY
          echo '' >> $GITHUB_STEP_SUMMARY

          echo '## Job ran by: ${{ github.actor }}' >> $GITHUB_STEP_SUMMARY
