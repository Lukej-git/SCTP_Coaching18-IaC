name: Create AWS ECS

on:
  push:
    branches:
      - main

env:
  APP_NAME: proj-aws-ecs-cicd
  ECR_S3_REPO: proj-aws-ecs-cicd-s3-ecr
  ECR_SQS_REPO: proj-aws-ecs-cicd-sqs-ecr

jobs:
  get-tag:
    runs-on: ubuntu-latest
    outputs:
      LATEST_TAG: ${{ steps.get_latest_tag.outputs.LATEST_TAG }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Fetch All Tags
        run: git fetch --tags

      - name: Get Latest Tag
        id: get_latest_tag
        run: |
          echo "LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)" >> "$GITHUB_OUTPUT"
          echo "LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)"

      - name: Output Latest Tag
        run: echo "The latest tag is ${{ steps.get_latest_tag.outputs.LATEST_TAG }}"

  create-ecs:
    needs: [docker-s3-checks, docker-sqs-checks]
    runs-on: ubuntu-latest
    name: Create ECS
    outputs:
      status: ${{ job.status }}
    defaults:
      run:
        working-directory: terraform-container
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform init
        run: terraform init

      - name: Terraform plan
        run: terraform plan

      - name: Terraform apply
        run: terraform apply --auto-approve
